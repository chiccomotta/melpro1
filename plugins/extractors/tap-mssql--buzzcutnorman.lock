{
  "plugin_type": "extractors",
  "name": "tap-mssql",
  "namespace": "tap_mssql",
  "variant": "buzzcutnorman",
  "label": "Microsoft SQL Server",
  "docs": "https://hub.meltano.com/extractors/tap-mssql--buzzcutnorman",
  "repo": "https://github.com/BuzzCutNorman/tap-mssql",
  "pip_url": "git+https://github.com/BuzzCutNorman/tap-mssql.git",
  "description": "Microsoft SQL Server",
  "logo_url": "https://hub.meltano.com/assets/logos/extractors/mssql.png",
  "capabilities": [
    "about",
    "batch",
    "catalog",
    "discover",
    "schema-flattening",
    "state",
    "stream-maps"
  ],
  "settings_group_validation": [
    [
      "database",
      "dialect",
      "driver_type",
      "host",
      "password",
      "user"
    ]
  ],
  "settings": [
    {
      "name": "batch_config.encoding.compression",
      "kind": "string",
      "label": "Batch Config Encoding Compression",
      "description": "Currently the only compression options is gzip"
    },
    {
      "name": "batch_config.encoding.format",
      "kind": "string",
      "label": "Batch Config Encoding Format",
      "description": "Currently the only format is jsonl"
    },
    {
      "name": "batch_config.storage.prefix",
      "kind": "string",
      "label": "Batch Config Storage Prefix",
      "description": "What prefix you want your messages to have example: test-batch-"
    },
    {
      "name": "batch_config.storage.root",
      "kind": "string",
      "label": "Batch Config Storage Root",
      "description": "The directory you want batch messages to be placed in example: file://test/batches"
    },
    {
      "name": "database",
      "kind": "string",
      "label": "Database",
      "description": "The Default database for this connection"
    },
    {
      "name": "dialect",
      "kind": "options",
      "value": "mssql",
      "label": "Dialect",
      "description": "The Dialect of SQLAlchamey",
      "options": [
        {
          "label": "Mssql",
          "value": "mssql"
        }
      ]
    },
    {
      "name": "driver_type",
      "kind": "options",
      "value": "pymssql",
      "label": "Driver Type",
      "description": "The Python Driver you will be using to connect to the SQL server",
      "options": [
        {
          "label": "Pyodbc",
          "value": "pyodbc"
        },
        {
          "label": "Pymssql",
          "value": "pymssql"
        }
      ]
    },
    {
      "name": "faker_config.locale",
      "kind": "array",
      "label": "Faker Locale",
      "description": "One or more LCID locale strings to produce localized output for: https://faker.readthedocs.io/en/master/#localization"
    },
    {
      "name": "faker_config.seed",
      "kind": "string",
      "label": "Faker Seed",
      "description": "Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator"
    },
    {
      "name": "flattening_enabled",
      "kind": "boolean",
      "label": "Enable Schema Flattening",
      "description": "'True' to enable schema flattening and automatically expand nested properties."
    },
    {
      "name": "flattening_max_depth",
      "kind": "integer",
      "label": "Max Flattening Depth",
      "description": "The max depth to flatten schemas."
    },
    {
      "name": "hd_jsonschema_types",
      "kind": "boolean",
      "value": false,
      "label": "Hd Jsonschema Types",
      "description": "Turn on Higher Defined(HD) JSON Schema types to assist Targets"
    },
    {
      "name": "host",
      "kind": "string",
      "label": "Host",
      "description": "The FQDN of the Host serving out the SQL Instance"
    },
    {
      "name": "password",
      "kind": "string",
      "label": "Password",
      "description": "The Password for the User account",
      "sensitive": true
    },
    {
      "name": "port",
      "kind": "integer",
      "label": "Port",
      "description": "The port on which SQL awaiting connection"
    },
    {
      "name": "sqlalchemy_eng_params.fast_executemany",
      "kind": "string",
      "label": "SQLAlchemy Eng Params Fast Executemany",
      "description": "Fast Executemany Mode: True, False"
    },
    {
      "name": "sqlalchemy_eng_params.future",
      "kind": "string",
      "label": "SQLAlchemy Eng Params Future",
      "description": "Run the engine in 2.0 mode: True, False"
    },
    {
      "name": "sqlalchemy_url_query.MultiSubnetFailover",
      "kind": "string",
      "label": "SQLAlchemy URL Query Multisubnetfailover",
      "description": "This is a Yes No option"
    },
    {
      "name": "sqlalchemy_url_query.TrustServerCertificate",
      "kind": "string",
      "label": "SQLAlchemy URL Query Trustservercertificate",
      "description": "This is a Yes No option"
    },
    {
      "name": "sqlalchemy_url_query.driver",
      "kind": "string",
      "label": "SQLAlchemy URL Query Driver",
      "description": "The Driver to use when connection should match the Driver Type"
    },
    {
      "name": "start_date",
      "kind": "date_iso8601",
      "label": "Start Date",
      "description": "The earliest record date to sync"
    },
    {
      "name": "stream_map_config",
      "kind": "object",
      "label": "User Stream Map Configuration",
      "description": "User-defined config values to be used within map expressions."
    },
    {
      "name": "stream_maps",
      "kind": "object",
      "label": "Stream Maps",
      "description": "Config object for stream maps capability. For more information check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html)."
    },
    {
      "name": "use_singer_decimal",
      "kind": "boolean",
      "label": "Use Singer Decimal",
      "description": "Whether to use use strings with `x-singer.decimal` format for decimals in the discovered schema. This is useful to avoid precision loss when working with large numbers."
    },
    {
      "name": "user",
      "kind": "string",
      "label": "User",
      "description": "The User Account who has been granted access to the SQL Server"
    }
  ]
}
